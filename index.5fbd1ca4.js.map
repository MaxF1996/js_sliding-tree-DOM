{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,UAqBlC,AAnBF,SAA4B,CAAO,CAAE,CAAW,EAC9C,IAAM,EAAQ,EAAQ,gBAAgB,CAAC,MAElC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAY,CAAA,CAAA,OAAA,QAAA,CAAA,GAAZ,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAmB,CAAnB,IAAM,EAAN,EAAA,KAAA,CACH,GAAK,EAAG,aAAa,CAAC,OAGpB,IAAM,EAAO,SAAS,aAAa,CAAC,OAEpC,CAAA,EAAK,SAAS,CAAG,EACjB,EAAK,WAAW,CAAG,EAAG,UAAU,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,GAEpD,EAAG,UAAU,CAAC,EAAE,CAAC,MAAM,GACvB,EAAG,YAAY,CAAC,EAAM,EAAG,aAAa,CAAC,OAE3C,C,C,M,E,CAZK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAaP,EA0BS,EAvBqB,UAE5B,AAqBO,EArBC,gBAAgB,CAAC,QAAS,SAAC,CAAnC,EACE,IAAM,EAAY,EAAE,MAAM,CAAC,OAAO,CAAC,MAEnC,GAAI,AAAC,GAAc,EAAU,aAAa,CAAC,OAI3C,IAAM,EAAK,EAAU,aAAa,CAAC,KAE/B,AAAC,CAAA,EAAG,KAAK,CAAC,OAAO,EAAI,AAAqB,UAArB,EAAG,KAAK,CAAC,OAAO,EAIvC,EAAG,KAAK,CAAC,OAAO,CAAG,QACnB,EAAU,SAAS,CAAC,MAAM,CAAC,cAJ3B,EAAG,KAAK,CAAC,OAAO,CAAG,OACnB,EAAU,SAAS,CAAC,GAAG,CAAC,aAM1B,EAAE,eAAe,GACnB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar tree = document.querySelector(\".tree\");\nfunction addSpanForLiHeader(element, nameOfClass) {\n    var allLi = element.querySelectorAll(\"li\");\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = allLi[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var li = _step.value;\n            if (!li.querySelector(\"ul\")) continue;\n            else {\n                var span = document.createElement(\"span\");\n                span.className = nameOfClass;\n                span.textContent = li.childNodes[0].textContent.trim();\n                li.childNodes[0].remove();\n                li.insertBefore(span, li.querySelector(\"ul\"));\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nfunction hideTree(element) {\n    addSpanForLiHeader(element, \"header\");\n    element.addEventListener(\"click\", function(e) {\n        var currentLi = e.target.closest(\"li\");\n        if (!currentLi || !currentLi.querySelector(\"ul\")) return;\n        var ul = currentLi.querySelector(\"ul\");\n        if (!ul.style.display || ul.style.display === \"block\") {\n            ul.style.display = \"none\";\n            currentLi.classList.add(\"expanded\");\n        } else {\n            ul.style.display = \"block\";\n            currentLi.classList.remove(\"expanded\");\n        }\n        e.stopPropagation();\n    });\n}\nhideTree(tree);\n\n//# sourceMappingURL=index.5fbd1ca4.js.map\n","'use strict';\n\nconst tree = document.querySelector('.tree');\n\nfunction addSpanForLiHeader(element, nameOfClass) {\n  const allLi = element.querySelectorAll('li');\n\n  for (const li of allLi) {\n    if (!li.querySelector('ul')) {\n      continue;\n    } else {\n      const span = document.createElement('span');\n\n      span.className = nameOfClass;\n      span.textContent = li.childNodes[0].textContent.trim();\n\n      li.childNodes[0].remove();\n      li.insertBefore(span, li.querySelector('ul'));\n    }\n  }\n}\n\nfunction hideTree(element) {\n  addSpanForLiHeader(element, 'header');\n\n  element.addEventListener('click', (e) => {\n    const currentLi = e.target.closest('li');\n\n    if (!currentLi || !currentLi.querySelector('ul')) {\n      return;\n    }\n\n    const ul = currentLi.querySelector('ul');\n\n    if (!ul.style.display || ul.style.display === 'block') {\n      ul.style.display = 'none';\n      currentLi.classList.add('expanded');\n    } else {\n      ul.style.display = 'block';\n      currentLi.classList.remove('expanded');\n    }\n\n    e.stopPropagation();\n  });\n}\n\nhideTree(tree);\n"],"names":["tree","document","querySelector","addSpanForLiHeader","element","nameOfClass","allLi","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","li","value","span","createElement","className","textContent","childNodes","trim","remove","insertBefore","err","return","addEventListener","e","currentLi","target","closest","ul","style","display","classList","add","stopPropagation"],"version":3,"file":"index.5fbd1ca4.js.map"}